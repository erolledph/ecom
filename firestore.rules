rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection: Users can only read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Stores subcollection: Public read, owner write/create/delete
      match /stores/{storeId} {
        allow read; // Anyone can read store details
        allow create: if request.auth != null && request.auth.uid == userId && request.resource.data.ownerId == userId;
        allow update, delete: if request.auth != null && request.auth.uid == userId && resource.data.ownerId == userId;
        // Allow updating customHtml field specifically
        allow update: if request.auth != null && request.auth.uid == userId && resource.data.ownerId == userId && 
                      request.resource.data.diff(resource.data).affectedKeys().hasOnly(['customHtml', 'updatedAt']);

        // Products subcollection: Public read, owner write
        match /products/{productId} {
          allow read; // Anyone can read products from any store
          allow create: if request.auth != null && request.auth.uid == userId;
          allow update, delete: if request.auth != null && request.auth.uid == userId;
        }

        // Slides subcollection: Public read, owner write
        match /slides/{slideId} {
          allow read; // Anyone can read slides from any store
          allow create: if request.auth != null && request.auth.uid == userId;
          allow update, delete: if request.auth != null && request.auth.uid == userId;
        }
      }
    }

    // Collection Group for 'stores' to allow querying by slug across all users
    // This enables getStoreBySlug and checkSlugAvailability functions
    match /{path=**}/stores/{storeId} {
      allow read: if true; // Public read for stores via collection group query
    }

    // Analytics events collection: Users can only read/write their own analytics data
    match /analytics_events/{eventId} {
      // Allow unauthenticated users to create analytics events (for public store visitors)
      allow create: if request.resource.data.ownerId != null;
      // Only authenticated store owners can read, update, or delete their own analytics data
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.ownerId;
    }
  }
}